import { createClient } from '@supabase/supabase-js';

// Supabase configuration
const supabaseUrl = 'https://qjocmhjdvthpnphkstja.supabase.co';

// NOTE: For production, never expose the service_role key in client-side code
// We're using it here just for a demo/prototype to bypass RLS
// For a real app, use proper server-side authentication
const supabaseAnonKey = 'KEY_HERE';
const supabaseServiceKey = 'KEY_HERE';

// Database connection details
export const databaseUrl = "postgresql://postgres.qjocmhjdvthpnphkstja:gjUSuB8d2T6mhhOJ@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true";
export const directUrl = "postgresql://postgres.qjocmhjdvthpnphkstja:gjUSuB8d2T6mhhOJ@aws-0-us-east-1.pooler.supabase.com:5432/postgres";

// Create Supabase client with simplified configuration for a demo
// IMPORTANT: This uses service_role which bypasses RLS for simplicity in testing
// In a production app, you would use proper authentication
export const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  },
  headers: {
    'Authorization': `Bearer ${supabaseServiceKey}`
  }
});

// Order type definition (legacy - kept for backward compatibility)
export type Order = {
  id?: string;
  user_name: string;
  email: string;
  product: string;
  price: number;
  shipping_address: string;
  user_id?: string;
  created_at?: string;
  status?: string;
};

// New OrderPlaced type definition with additional fields
export type OrderPlaced = {
  id?: string; // UUID will be auto-generated by Supabase
  user_id?: string; // Clerk user ID or 'guest' if not logged in
  user_name: string; // From Clerk or fallback to "Guest User"
  email: string;
  product: string;
  price: number;
  size: string;
  quantity: number;
  shipping_address: string;
  status?: string; // Defaults to 'pending' in the database
  email_sent?: boolean; // Defaults to false in the database
  created_at?: string; // Timestamp auto-generated
  updated_at?: string; // Timestamp auto-generated
}; 